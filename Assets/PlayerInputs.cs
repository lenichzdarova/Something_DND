//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.4.4
//     from Assets/PlayerInputs.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerInputs : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerInputs()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerInputs"",
    ""maps"": [
        {
            ""name"": ""MovementInputs"",
            ""id"": ""cf505616-476f-47bc-aca0-b1e397ec0e8f"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""089c70a7-94ca-43fb-88bd-f4310745c102"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""ca4cf7cc-701f-4f14-8a7e-9e9267df85c8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""1b156782-35dd-4c39-a066-1890d80d5d1d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""5e7f6002-688b-4fc3-ab99-3a7135bdd3d0"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""03f809c9-2d7a-4f21-97ad-b0c0c08028f9"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""24534fbe-176f-4fbc-9adb-1672378af61e"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""79a6de32-7b1c-4a03-8ced-1969d0900877"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""c99c7cb9-3891-4824-b868-5bbec74078b3"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""8c032db3-f51f-458a-8616-ceb5d5c07489"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""49fd8ba2-a7a7-42b7-b134-96db9bf8216f"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UIInputs"",
            ""id"": ""01876577-7803-4771-9f7c-d72db278064b"",
            ""actions"": [
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""cc40b155-e43e-4ed2-a05e-17553e95cd5b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""ccc28daf-4d74-4b87-8159-17a89627c9b0"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Selector"",
            ""id"": ""99c67321-fa39-4f57-8de4-90cd61cefe9a"",
            ""actions"": [
                {
                    ""name"": ""SelectFirst"",
                    ""type"": ""Button"",
                    ""id"": ""f6d50e1e-86c5-4063-afed-6af85f272887"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectSecond"",
                    ""type"": ""Button"",
                    ""id"": ""fcb3a90f-4272-4296-a3e6-6c6f2fd454f1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectThird"",
                    ""type"": ""Button"",
                    ""id"": ""2f71adbc-92f5-4587-ad42-d53e7168a7c7"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectFourth"",
                    ""type"": ""Button"",
                    ""id"": ""fd2454bc-933b-4977-ae0f-7d40c64912b0"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectFifth"",
                    ""type"": ""Button"",
                    ""id"": ""991fc3a7-61af-4b74-bd24-8d844a775747"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SelectSixth"",
                    ""type"": ""Button"",
                    ""id"": ""d2754345-1834-496b-a2b9-593e4ab37108"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""c686ff76-0d18-45ae-9e3c-866a846489a2"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectFirst"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ed9ae376-2a93-4c7c-a557-1b4cb1cdd93c"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectSecond"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""82243c7d-1a93-4e93-beea-586292579536"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectThird"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""daed7382-8547-4375-9c23-0c31814970aa"",
                    ""path"": ""<Keyboard>/4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectFourth"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""10c7fe28-8541-4b8a-9994-d2abecd84a83"",
                    ""path"": ""<Keyboard>/5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectFifth"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""caee03b8-fd77-4173-8b13-117726ed703d"",
                    ""path"": ""<Keyboard>/6"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SelectSixth"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // MovementInputs
        m_MovementInputs = asset.FindActionMap("MovementInputs", throwIfNotFound: true);
        m_MovementInputs_Move = m_MovementInputs.FindAction("Move", throwIfNotFound: true);
        m_MovementInputs_Look = m_MovementInputs.FindAction("Look", throwIfNotFound: true);
        m_MovementInputs_Jump = m_MovementInputs.FindAction("Jump", throwIfNotFound: true);
        // UIInputs
        m_UIInputs = asset.FindActionMap("UIInputs", throwIfNotFound: true);
        m_UIInputs_Inventory = m_UIInputs.FindAction("Inventory", throwIfNotFound: true);
        // Selector
        m_Selector = asset.FindActionMap("Selector", throwIfNotFound: true);
        m_Selector_SelectFirst = m_Selector.FindAction("SelectFirst", throwIfNotFound: true);
        m_Selector_SelectSecond = m_Selector.FindAction("SelectSecond", throwIfNotFound: true);
        m_Selector_SelectThird = m_Selector.FindAction("SelectThird", throwIfNotFound: true);
        m_Selector_SelectFourth = m_Selector.FindAction("SelectFourth", throwIfNotFound: true);
        m_Selector_SelectFifth = m_Selector.FindAction("SelectFifth", throwIfNotFound: true);
        m_Selector_SelectSixth = m_Selector.FindAction("SelectSixth", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // MovementInputs
    private readonly InputActionMap m_MovementInputs;
    private IMovementInputsActions m_MovementInputsActionsCallbackInterface;
    private readonly InputAction m_MovementInputs_Move;
    private readonly InputAction m_MovementInputs_Look;
    private readonly InputAction m_MovementInputs_Jump;
    public struct MovementInputsActions
    {
        private @PlayerInputs m_Wrapper;
        public MovementInputsActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_MovementInputs_Move;
        public InputAction @Look => m_Wrapper.m_MovementInputs_Look;
        public InputAction @Jump => m_Wrapper.m_MovementInputs_Jump;
        public InputActionMap Get() { return m_Wrapper.m_MovementInputs; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(MovementInputsActions set) { return set.Get(); }
        public void SetCallbacks(IMovementInputsActions instance)
        {
            if (m_Wrapper.m_MovementInputsActionsCallbackInterface != null)
            {
                @Move.started -= m_Wrapper.m_MovementInputsActionsCallbackInterface.OnMove;
                @Move.performed -= m_Wrapper.m_MovementInputsActionsCallbackInterface.OnMove;
                @Move.canceled -= m_Wrapper.m_MovementInputsActionsCallbackInterface.OnMove;
                @Look.started -= m_Wrapper.m_MovementInputsActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_MovementInputsActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_MovementInputsActionsCallbackInterface.OnLook;
                @Jump.started -= m_Wrapper.m_MovementInputsActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_MovementInputsActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_MovementInputsActionsCallbackInterface.OnJump;
            }
            m_Wrapper.m_MovementInputsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Move.started += instance.OnMove;
                @Move.performed += instance.OnMove;
                @Move.canceled += instance.OnMove;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
            }
        }
    }
    public MovementInputsActions @MovementInputs => new MovementInputsActions(this);

    // UIInputs
    private readonly InputActionMap m_UIInputs;
    private IUIInputsActions m_UIInputsActionsCallbackInterface;
    private readonly InputAction m_UIInputs_Inventory;
    public struct UIInputsActions
    {
        private @PlayerInputs m_Wrapper;
        public UIInputsActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @Inventory => m_Wrapper.m_UIInputs_Inventory;
        public InputActionMap Get() { return m_Wrapper.m_UIInputs; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIInputsActions set) { return set.Get(); }
        public void SetCallbacks(IUIInputsActions instance)
        {
            if (m_Wrapper.m_UIInputsActionsCallbackInterface != null)
            {
                @Inventory.started -= m_Wrapper.m_UIInputsActionsCallbackInterface.OnInventory;
                @Inventory.performed -= m_Wrapper.m_UIInputsActionsCallbackInterface.OnInventory;
                @Inventory.canceled -= m_Wrapper.m_UIInputsActionsCallbackInterface.OnInventory;
            }
            m_Wrapper.m_UIInputsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Inventory.started += instance.OnInventory;
                @Inventory.performed += instance.OnInventory;
                @Inventory.canceled += instance.OnInventory;
            }
        }
    }
    public UIInputsActions @UIInputs => new UIInputsActions(this);

    // Selector
    private readonly InputActionMap m_Selector;
    private ISelectorActions m_SelectorActionsCallbackInterface;
    private readonly InputAction m_Selector_SelectFirst;
    private readonly InputAction m_Selector_SelectSecond;
    private readonly InputAction m_Selector_SelectThird;
    private readonly InputAction m_Selector_SelectFourth;
    private readonly InputAction m_Selector_SelectFifth;
    private readonly InputAction m_Selector_SelectSixth;
    public struct SelectorActions
    {
        private @PlayerInputs m_Wrapper;
        public SelectorActions(@PlayerInputs wrapper) { m_Wrapper = wrapper; }
        public InputAction @SelectFirst => m_Wrapper.m_Selector_SelectFirst;
        public InputAction @SelectSecond => m_Wrapper.m_Selector_SelectSecond;
        public InputAction @SelectThird => m_Wrapper.m_Selector_SelectThird;
        public InputAction @SelectFourth => m_Wrapper.m_Selector_SelectFourth;
        public InputAction @SelectFifth => m_Wrapper.m_Selector_SelectFifth;
        public InputAction @SelectSixth => m_Wrapper.m_Selector_SelectSixth;
        public InputActionMap Get() { return m_Wrapper.m_Selector; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SelectorActions set) { return set.Get(); }
        public void SetCallbacks(ISelectorActions instance)
        {
            if (m_Wrapper.m_SelectorActionsCallbackInterface != null)
            {
                @SelectFirst.started -= m_Wrapper.m_SelectorActionsCallbackInterface.OnSelectFirst;
                @SelectFirst.performed -= m_Wrapper.m_SelectorActionsCallbackInterface.OnSelectFirst;
                @SelectFirst.canceled -= m_Wrapper.m_SelectorActionsCallbackInterface.OnSelectFirst;
                @SelectSecond.started -= m_Wrapper.m_SelectorActionsCallbackInterface.OnSelectSecond;
                @SelectSecond.performed -= m_Wrapper.m_SelectorActionsCallbackInterface.OnSelectSecond;
                @SelectSecond.canceled -= m_Wrapper.m_SelectorActionsCallbackInterface.OnSelectSecond;
                @SelectThird.started -= m_Wrapper.m_SelectorActionsCallbackInterface.OnSelectThird;
                @SelectThird.performed -= m_Wrapper.m_SelectorActionsCallbackInterface.OnSelectThird;
                @SelectThird.canceled -= m_Wrapper.m_SelectorActionsCallbackInterface.OnSelectThird;
                @SelectFourth.started -= m_Wrapper.m_SelectorActionsCallbackInterface.OnSelectFourth;
                @SelectFourth.performed -= m_Wrapper.m_SelectorActionsCallbackInterface.OnSelectFourth;
                @SelectFourth.canceled -= m_Wrapper.m_SelectorActionsCallbackInterface.OnSelectFourth;
                @SelectFifth.started -= m_Wrapper.m_SelectorActionsCallbackInterface.OnSelectFifth;
                @SelectFifth.performed -= m_Wrapper.m_SelectorActionsCallbackInterface.OnSelectFifth;
                @SelectFifth.canceled -= m_Wrapper.m_SelectorActionsCallbackInterface.OnSelectFifth;
                @SelectSixth.started -= m_Wrapper.m_SelectorActionsCallbackInterface.OnSelectSixth;
                @SelectSixth.performed -= m_Wrapper.m_SelectorActionsCallbackInterface.OnSelectSixth;
                @SelectSixth.canceled -= m_Wrapper.m_SelectorActionsCallbackInterface.OnSelectSixth;
            }
            m_Wrapper.m_SelectorActionsCallbackInterface = instance;
            if (instance != null)
            {
                @SelectFirst.started += instance.OnSelectFirst;
                @SelectFirst.performed += instance.OnSelectFirst;
                @SelectFirst.canceled += instance.OnSelectFirst;
                @SelectSecond.started += instance.OnSelectSecond;
                @SelectSecond.performed += instance.OnSelectSecond;
                @SelectSecond.canceled += instance.OnSelectSecond;
                @SelectThird.started += instance.OnSelectThird;
                @SelectThird.performed += instance.OnSelectThird;
                @SelectThird.canceled += instance.OnSelectThird;
                @SelectFourth.started += instance.OnSelectFourth;
                @SelectFourth.performed += instance.OnSelectFourth;
                @SelectFourth.canceled += instance.OnSelectFourth;
                @SelectFifth.started += instance.OnSelectFifth;
                @SelectFifth.performed += instance.OnSelectFifth;
                @SelectFifth.canceled += instance.OnSelectFifth;
                @SelectSixth.started += instance.OnSelectSixth;
                @SelectSixth.performed += instance.OnSelectSixth;
                @SelectSixth.canceled += instance.OnSelectSixth;
            }
        }
    }
    public SelectorActions @Selector => new SelectorActions(this);
    public interface IMovementInputsActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
    }
    public interface IUIInputsActions
    {
        void OnInventory(InputAction.CallbackContext context);
    }
    public interface ISelectorActions
    {
        void OnSelectFirst(InputAction.CallbackContext context);
        void OnSelectSecond(InputAction.CallbackContext context);
        void OnSelectThird(InputAction.CallbackContext context);
        void OnSelectFourth(InputAction.CallbackContext context);
        void OnSelectFifth(InputAction.CallbackContext context);
        void OnSelectSixth(InputAction.CallbackContext context);
    }
}
